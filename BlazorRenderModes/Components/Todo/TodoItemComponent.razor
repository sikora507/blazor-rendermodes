@using BlazorRenderModes.Models

<div class="card mb-2">
    <div class="card-body">
        <div class="d-flex justify-content-between align-items-center">
            <div class="form-check">
                <input class="form-check-input" type="checkbox" id="todo-@Item.Id" name="completed-@Item.Id"
                       checked="@Item.IsCompleted" 
                       @onchange="HandleToggle">
                <label class="form-check-label @(Item.IsCompleted ? "text-decoration-line-through text-muted" : "")" 
                       for="todo-@Item.Id">
                    @Item.Title
                </label>
            </div>
            <div>
                <small class="text-muted">@Item.CreatedAt.ToString("MM/dd/yyyy")</small>
                <button class="btn btn-outline-danger btn-sm ms-2" type="button" @onclick="HandleDelete">
                    <i class="bi bi-trash"></i>
                </button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public TodoItem Item { get; set; } = new();
    [Parameter] public EventCallback<TodoItem> OnToggleComplete { get; set; }
    [Parameter] public EventCallback<TodoItem> OnDelete { get; set; }

    private async Task HandleToggle()
    {
        if (OnToggleComplete.HasDelegate)
        {
            await OnToggleComplete.InvokeAsync(Item);
        }
    }

    private async Task HandleDelete()
    {
        if (OnDelete.HasDelegate)
        {
            await OnDelete.InvokeAsync(Item);
        }
    }
}